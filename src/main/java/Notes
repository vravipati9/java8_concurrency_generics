---------------
Generics
---------------
Upper Bound - ? extends Number -> we specify Upper Bound, anything that extends Number
Lower Bound - ? super Integer -> we specify Lower Bound, anything that is super of Integer (Integer, Number, Object)

--------
Covariance and contravariance are terms that refer to the ability to use a more derived type (more specific) or a less derived type (less specific) than originally specified.
Generic type parameters support covariance and contravariance to provide greater flexibility in assigning and using generic types

Covariant (meaning more specific to more general) -> Arrays are Covariant, an array of Type T[] may contain elements of type T or subtype of T.
            ? extends T -> Covariant, ? can be anything which extends T

Contravariant -> ? super T, The term contravariant preserves the ordering of types from more general to more specific

PECS -> Producer Extends, Consumer Super
- Use extends when you consume
- Use Super when you provide
- Use explicit type when you do both

In Java 8 Streams
    providing a value from the stream -> super
    using the value in the supplied lambda -> extends



